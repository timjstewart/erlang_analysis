Ruby Scripts for analyzing Erlang Code

Requirements:

  ruby

Installation:

  chmod +x eimports
  chmod +x eexports
  chmod +x erefs

Running:

  ./eimports              # parse all erlang source files in current directory
                          # and display their imports in colon delimited format

  ./eimports -t           # parse all erlang source files in current directory 
                          # and display their imports as a tree.


  ./eexports              # parse all erlang source files in current directory 
                          # and display their imports in colon delimited format

  ./eexports -t           # parse all erlang source files in current directory 
                          # and display their imports as a tree.

  ./eimports -t -e        # parse all erlang source files in current directory 
                          # and display their imports as a tree (excluding OTP
                          # modules).

  ./erefs module:function # parse all erlang source files in current directory
                          # and print all modules that call module:function

  ./erefs function        # parse all erlang source files in current directory
                          # and print all modules that call function regardless
                          # of the module.